# Default values for nem-client.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nis-client
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  # TODO => latest@sha256:cec3ca42c9f7af54fe0b8e7840aee50d322182bb66df28d5bbe645efa2881a7b
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

#TODO: we may not need this
clusterName: docker-desktop

config:
  user:
    nem.network: mainnet
    # nem.network.nemesisFilePath: /usersettings/nemesis.bin
    # nis.unlockedLimit: 4
    # nis.bootKey: PrivateKeyToBeReplaced
    # nis.bootName: MyNodeName

    # base64 encoded nemesis.bin file content
    # customNemesisFileBase64: data
  logalphaproperties: |-
    handlers = java.util.logging.ConsoleHandler, java.util.logging.FileHandler
    .level = INFO

    java.util.logging.ConsoleHandler.formatter = org.nem.deploy.ColorConsoleFormatter
    java.util.logging.ConsoleHandler.level = INFO

    java.util.logging.FileHandler.formatter = org.nem.deploy.NemFormatter
    java.util.logging.FileHandler.limit = 100000000
    java.util.logging.FileHandler.count = 100
    java.util.logging.FileHandler.pattern = ${nem.folder}/nis/logs/nis-%g.log

    java.util.logging.SimpleFormatter.format = %1$tY-%1$tm-%1$td %1$tH:%1$tM:%1$tS.%1$tL %4$s %5$s%6$s (%2$s)%n

  dbproperties: |-
    # suppress inspection "UnusedProperty" for whole file
    jdbc.driverClassName=org.h2.Driver
    #
    #${nem.folder} will be replaced by the setting from nem.folder
    #
    jdbc.url=jdbc:h2:${nem.folder}/nis/data/nis5_${nem.network};DB_CLOSE_DELAY=-1
    jdbc.username=
    jdbc.password=

    hibernate.dialect=org.hibernate.dialect.H2Dialect
    hibernate.show_sql=false
    hibernate.use_sql_comments=false
    hibernate.jdbc.batch_size=20
    hibernate.query.startup_check=false

    flyway.locations=db/h2

  peersconfigjson: |-
    {
      "_info": "this file contains a list of all trusted peers and can be shared",
      "knownPeers": [
        {
          "endpoint": {
            "host": "62.75.251.134",
            "port": 7890,
            "protocol": "http"
          },
          "identity": {
            "name": "alice2",
            "public-key": "cd94cdcfde6878e093bc70e35b575dbe68095c69f73112e67559f71c1fb64c6e"
          }
        }
      ]
    }
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  runAsUser: 11001
  fsGroup: 11001
  runAsGroup: 11001

securityContext:
  runAsUser: 11001
  runAsGroup: 11001

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 60
  periodSeconds: 10

service:
  # type: ClusterIP
  type: LoadBalancer
  httpPort: 7890
  httpsPort: 7891
  wsPort: 7778

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: localhost
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
